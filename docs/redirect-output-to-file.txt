redirect-output-to-file.txt
Created Mon Jan  7 10:44:18 AST 2019
by Raymond E. Marcil <ray.marcil@alaska.gov>



Yes it is possible, just redirect the output to a file:
  SomeCommand > SomeFile.txt  

Or if you want to append data:
  SomeCommand >> SomeFile.txt

If you want stderr as well use this:
  SomeCommand &> SomeFile.txt  

or this to append:
  SomeCommand &>> SomeFile.txt  

if you want to have both stderr and output displayed on the console and in a file use this:
  SomeCommand 2>&1 | tee SomeFile.txt

(If you want the output only, drop the 2 above)
--answered Feb 14 '14 at 19:52
  Seth

  edited Nov 1 '18 at 22:05


Please note that the n.e. in the syntax column means "not existing".
There is a way, but it's too complicated to fit into the column.
You can find a helpful link in the List section about it.

          || visible in terminal ||   visible in file   || existing
  Syntax  ||  StdOut  |  StdErr  ||  StdOut  |  StdErr  ||   file   
==========++==========+==========++==========+==========++===========
    >     ||    no    |   yes    ||   yes    |    no    || overwrite
    >>    ||    no    |   yes    ||   yes    |    no    ||  append
          ||          |          ||          |          ||
   2>     ||   yes    |    no    ||    no    |   yes    || overwrite
   2>>    ||   yes    |    no    ||    no    |   yes    ||  append
          ||          |          ||          |          ||
   &>     ||    no    |    no    ||   yes    |   yes    || overwrite
   &>>    ||    no    |    no    ||   yes    |   yes    ||  append
          ||          |          ||          |          ||
 | tee    ||   yes    |   yes    ||   yes    |    no    || overwrite
 | tee -a ||   yes    |   yes    ||   yes    |    no    ||  append
          ||          |          ||          |          ||
 n.e. (*) ||   yes    |   yes    ||    no    |   yes    || overwrite
 n.e. (*) ||   yes    |   yes    ||    no    |   yes    ||  append
          ||          |          ||          |          ||
|& tee    ||   yes    |   yes    ||   yes    |   yes    || overwrite
|& tee -a ||   yes    |   yes    ||   yes    |   yes    ||  append

List:
o command > output.txt

  The standard output stream will be redirected to the file only,
  it will not be visible in the terminal. If the file already exists,
  it gets overwritten.

o command >> output.txt

  The standard output stream will be redirected to the file only,
  it will not be visible in the terminal. If the file already exists,
  the new data will get appended to the end of the file.

command 2> output.txt
  The standard error stream will be redirected to the file only, it
  will not be visible in the terminal. If the file already exists, it gets
  overwritten.

command 2>> output.txt
  The standard error stream will be redirected to the file only, it
  will not be visible in the terminal. If the file already exists,
  the new data will get appended to the end of the file.

command &> output.txt
  Both the standard output and standard error stream will be redirected
  to the file only, nothing will be visible in the terminal. If the file
  already exists, it gets overwritten.

command &>> output.txt
  Both the standard output and standard error stream will be redirected
  to the file only, nothing will be visible in the terminal. If the file
  already exists, the new data will get appended to the end  of the file.

command | tee output.txt
  The standard output stream will be copied to the file, it will still be
  visible in the terminal. If the file already exists, it gets overwritten.

command | tee -a output.txt
  The standard output stream will be copied to the file, it will still be
  visible in the terminal. If the file already exists, the new data will
  get appended to the end of the file.

(*)
  Bash has no shorthand syntax that allows piping only StdErr to a second
  command, which would be needed here in combination with tee again to
  complete the table. If you really need something like that, please look
  at "How to pipe stderr, and not stdout?" on Stack Overflow for some ways
  how this can be done e.g. by swapping streams or using process substitution.

command |& tee output.txt
  Both the standard output and standard error streams will be copied to the
  file while still being visible in the terminal.  If the file already exists,
   it gets overwritten.

command |& tee -a output.txt
  Both the standard output and standard error streams will be copied to the
  file while still being visible in the terminal.  If the file already exists,
  the new data will get appended to the end of the file.

--answered Feb 8 '16 at 14:52
  Byte Commander

  edited May 23 '17 at 12:39
  Community


You can also use tee to send the output to a file:

command | tee ~/outputfile.txt
  A slight modification will catch stderr as well:

command 2>&1 | tee ~/outputfile.txt
  or slightly shorter and less complicated:

command |& tee ~/outputfile.txt
  tee is useful if you want to be able to capture command output while also 
  viewing it live.

--answered Jun 20 '14 at 4:45
  Aaron

  edited Oct 26 '16 at 10:20
  David Foerster


Links
=====
How do I save terminal output to a file?
https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file
